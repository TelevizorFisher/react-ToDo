{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/CLock.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","props","useSpring","opacity","marginTop","from","div","style","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","Time","useState","Date","setValue","useEffect","interval","setInterval","clearInterval","App","status","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAsCeA,EAnCF,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UAiBlDC,EAAQC,YAAU,CAACC,QAAS,EAAGC,UAAU,EAAGC,KAAM,CAACF,QAAS,EAAGC,WAAW,OAChF,OAAO,cAAC,IAASE,IAAV,CAAcC,MAAON,EAArB,SACL,iCACC,uBAAOO,MAAOT,EAAWU,SAlBH,SAACC,GACzBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBZ,EAAac,EAAEG,OAAOL,QAgBiCM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAfe,SAACN,GAC1BA,EAAEO,iBACFnB,EAAS,GAAD,mBACJD,GADI,CAEP,CAACqB,KAAMnB,EAAWoB,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAE9C1B,EAAa,KASyBmB,UAAU,cAAcD,KAAK,SAAjE,SACA,mBAAGC,UAAU,yBAEb,qBAAKA,UAAU,SAAf,SACA,yBAAQN,SAXW,SAACC,GACtBV,EAAUU,EAAEG,OAAOL,QAUgBe,KAAK,QAAQR,UAAU,cAAxD,UACC,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,oC,QCCUgB,EA5BF,SAAC,GAAmC,IAAlCN,EAAiC,EAAjCA,KAAMO,EAA2B,EAA3BA,KAAM5B,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAmBjC,OACC,sBAAKiB,UAAU,OAAf,UACC,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IACjE,wBAAQF,QAhBa,WACtBlB,EACCD,EAAM6B,KAAI,SAACC,GACX,OAAIA,EAAKP,KAAOK,EAAKL,GACd,2BACHO,GADJ,IACUR,WAAYQ,EAAKR,YAGrBQ,OAQ4BZ,UAAU,eAA5C,SAA2D,mBAAGA,UAAU,mBACxE,wBAAQC,QArBW,WACrBlB,EAASD,EAAM+B,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAoBXL,UAAU,YAA1C,SAAsD,mBAAGA,UAAU,uBCXvDe,EAZE,SAAC,GAAsC,IAArCjC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUiC,EAAmB,EAAnBA,cACnC,OACC,qBAAKhB,UAAU,iBAAf,SACC,oBAAIA,UAAU,YAAd,SACEgB,EAAcL,KAAI,SAAAD,GAAI,OACtB,cAAC,EAAD,CAAM5B,MAAOA,EAAOC,SAAUA,EAAwBoB,KAAMO,EAAKP,KAAMO,KAAMA,EAAMM,cAAeA,GAArDN,EAAKL,Y,cCiBxCY,MAtBf,WAAiB,IAAD,EACUC,mBAAS,IAAIC,MADvB,mBACT1B,EADS,KACF2B,EADE,KAehB,OAZAC,qBAAU,WACT,IAAMC,EAAWC,aAChB,kBAAMH,EAAS,IAAID,QACnB,KAGD,OAAO,WACNK,cAAcF,MAGb,IAGF,8BACC,cAAC,IAAD,CAAO7B,MAAOA,OC+DFgC,MA7Ef,WAAe,MAEqBP,mBAAS,IAF9B,mBAENlC,EAFM,KAEKH,EAFL,OAGaqC,mBAAS,IAHtB,mBAGNpC,EAHM,KAGCC,EAHD,OAIemC,mBAAS,OAJxB,mBAINQ,EAJM,KAIEzC,EAJF,OAK6BiC,mBAAS,IALtC,mBAKNF,EALM,KAKSW,EALT,KAObN,qBAAU,WACRO,MACC,IAEHP,qBAAU,WACRQ,IACAC,MACC,CAAChD,EAAO4C,IAEX,IAAMG,EAAgB,WACpB,OAAQH,GACN,IAAK,YACHC,EAAiB7C,EAAM+B,QAAO,SAACH,GAAD,OAA6B,IAAnBA,EAAKN,cAC7C,MACF,IAAK,cACHuB,EAAiB7C,EAAM+B,QAAO,SAACH,GAAD,OAA6B,IAAnBA,EAAKN,cAC7C,MACF,QACEuB,EAAiB7C,KAIjBgD,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUpD,KAEzC8C,EAAgB,WACpB,GAAsC,OAAlCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDpD,EAASqD,KAGPlD,EAAQC,YAAU,CAAEC,QAAS,EAAGE,KAAM,CAAEF,QAAS,KACvD,OACE,cAAC,IAASG,IAAV,CAAcC,MAAON,EAArB,SACE,qBAAKc,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,iCACE,6CAGF,cAAC,EAAD,CACEnB,aAAcA,EACdC,MAAOA,EACPC,SAAUA,EACVC,UAAWA,EACXC,UAAWA,IAEZH,EAAMwD,OACL,cAAC,EAAD,CACExD,MAAOA,EACPC,SAAUA,EACViC,cAAeA,IAGjB,oBAAGhB,UAAU,WAAb,UACE,4CACA,qBAAKA,UAAU,wBAGnB,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,cChEGuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2d0bae7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n\r\n\tconst inputTextHandler = (e) => {\r\n\t\tconsole.log(e.target.value);\r\n\t\tsetInputText(e.target.value);\r\n\t}\r\n\tconst submitTodoHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetTodos([\r\n\t\t\t...todos, \r\n\t\t\t{text: inputText, completed: false, id: Math.random() * 1000 },\r\n\t\t])\r\n\t\tsetInputText(\"\");\r\n\t}\r\n\tconst statusHandler = (e) => {\r\n\t\tsetStatus(e.target.value);\r\n\t}\r\n\tconst props = useSpring({opacity: 1, marginTop:0, from: {opacity: 0, marginTop:-1000}})\r\n\treturn <animated.div style={props}>\r\n\t\t\t<form>\r\n\t\t\t\t<input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n\t\t\t\t<button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"select\">\r\n\t\t\t\t<select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n\t\t\t\t\t<option value=\"all\">All</option>\r\n\t\t\t\t\t<option value=\"completed\">Completed</option>\r\n\t\t\t\t\t<option value=\"uncompleted\">Uncompleted</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</animated.div>\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n\r\n\tconst deleteHandler = () => {\r\n\t\tsetTodos(todos.filter((el) => el.id !== todo.id))\r\n\t}\r\n\r\n\tconst completeHandler = () => {\r\n\t\t\tsetTodos(\r\n\t\t\t\ttodos.map((item) => {\r\n\t\t\t\tif (item.id === todo.id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item, completed: !item.completed\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\ndebugger\r\n\treturn(\r\n\t\t<div className=\"todo\">\r\n\t\t\t<li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n\t\t\t\t<button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n\t\t\t\t<button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n\t\t</div>\t\t\t\r\n\t)\r\n}\r\n\r\nexport default Todo;","\timport React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\n\tconst TodoList = ({todos, setTodos, filteredTodos }) =>{\r\n\t\treturn(\r\n\t\t\t<div className=\"todo-container\">\r\n\t\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t\t{filteredTodos.map(todo => (\r\n\t\t\t\t\t\t<Todo todos={todos} setTodos={setTodos} key={todo.id} text={todo.text} todo={todo} filteredTodos={filteredTodos}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\texport default TodoList;","\timport React, { useEffect, useState } from 'react';\r\n\timport Clock from 'react-clock';\r\n\timport '../components/Clock.css';\r\n\r\n\tfunction Time() {\r\n\tconst [value, setValue] = useState(new Date());\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(\r\n\t\t\t() => setValue(new Date()),\r\n\t\t\t1000\r\n\t\t);\r\n\t\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t\t\r\n\t\t}\r\n\t}, []);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Clock value={value} />\r\n\t\t</div>\r\n\t)\r\n\t}\r\n\r\n\texport default Time;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { useSpring, animated } from \"react-spring\";\nimport Time from \"./components/CLock\";\n\nfunction App() {\n  //State\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //USE EFFECT\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n  //save to Local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  const props = useSpring({ opacity: 1, from: { opacity: 1 } });\n  return (\n    <animated.div style={props}>\n      <div className=\"container\">\n        <div className=\"container-glass\">\n          <header>\n            <h1>Todo List</h1>\n          </header>\n\n          <Form\n            setInputText={setInputText}\n            todos={todos}\n            setTodos={setTodos}\n            inputText={inputText}\n            setStatus={setStatus}\n          />\n          {todos.length ? (\n            <TodoList\n              todos={todos}\n              setTodos={setTodos}\n              filteredTodos={filteredTodos}\n            />\n          ) : (\n            <p className=\"no-todos\">\n              <div>No todos!</div>\n              <div className=\"no-todos-picture\"></div>\n            </p>\n          )}\n          <div className=\"todos-time\">\n            <Time />\n          </div>\n        </div>\n      </div>\n    </animated.div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}